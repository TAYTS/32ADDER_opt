.include "/Users/taytzushieh/Dropbox/SUTD/SCHOOL_STUFF/TERM4/50-002_Computation_Structures/Software_Lab/50002/nominal.jsim"
.include "/Users/taytzushieh/Dropbox/SUTD/SCHOOL_STUFF/TERM4/50-002_Computation_Structures/Software_Lab/50002/stdcell.jsim"
//.include "/Users/taytzushieh/Dropbox/SUTD/SCHOOL_STUFF/TERM4/50-002_Computation_Structures/Software_Lab/50002/lab3adder.jsim"
.include "/Users/taytzushieh/Dropbox/SUTD/SCHOOL_STUFF/TERM4/2D/checkoff2d/2dcheckoff_6ns.jsim"


* 3-input ADD3: inputs are A, b and C, output is S and C
.subckt FA a b ci s co
Xnand1 a b 1 nand2
Xnand2 a ci 2 nand2
Xnand3 b ci 3 nand2
Xnand4 1 2 3 co nand3
Xor1 a b 4 xor2
Xor2 4 ci s xor2
.ends


.subckt NOR4_SUB inp[3:0] z
Xnor4 inp[3] inp[2] inp[1] inp[0] z nor4
.ends


.subckt AND2 A B z
Xnand0 A B N1 nand2
Xnand1 N1 N1 z nand2
.ends

.subckt OR2 A B z
Xnor0 A B N1 nor2
Xnor1 N1 N1 z nor2
.ends


* Compute the Z (All zero)
.subckt Z inp[31:0] z
Xnor0 inp[3:0]   N1 NOR4_SUB
Xnor1 inp[7:4]   N2 NOR4_SUB
Xnor2 inp[11:8]  N3 NOR4_SUB
Xnor3 inp[15:12] N4 NOR4_SUB
Xnor4 inp[19:16] N5 NOR4_SUB
Xnor5 inp[23:20] N6 NOR4_SUB
Xnor6 inp[27:24] N7 NOR4_SUB
Xnor7 inp[31:28] N8 NOR4_SUB

Xand0 N1 N2 A1 AND2
Xand1 A1 N3 A2 AND2
Xand2 A2 N4 A3 AND2
Xand3 A3 N5 A4 AND2
Xand4 A4 N6 A5 AND2
Xand5 A5 N7 A6 AND2
Xand6 A6 N8 z AND2


//Xand0 N1 N2 N3 N4 F1 and4
//Xand1 N5 N6 N7 N8 F2 and4
//Xand2 F1 F2 z and2
.ends


* Compute the V (Overflow)
.subckt V XA XB S v
Xinvs S  inv_s inverter
Xinva XA inv_a inverter
Xinvb XB inv_b inverter
Xand0 XA XB inv_s a0 and3
Xand1 inv_a inv_b S a1 and3
Xor0 a0 a1 v or2
.ends


* Compute the carry
.subckt CLA A[3:0] B[3:0] CI S[3:0] co3
// C0
Xg0 A0 B0 g0A AND2
Xp0 A0 B0 p0A xor2
Xpc0 p0A CI pc0A AND2
Xco0 g0A pc0A co0 OR2
Xs0 p0A CI S0 xor2

// C1
Xg1 A1 B1 g1A AND2
Xp1 A1 B1 p1A xor2
Xg10 A0 B0 g1B AND2
Xp10 A0 B0 p1B xor2
Xpc10 p1B CI pc1A AND2
Xco10 g1B pc1A co1A OR2
Xpc1 p1A co1A pc1B AND2
Xco1 g1A pc1B co1 OR2
Xs1 p1A co1A S1 xor2

// C2	
Xg2 A2 B2 g2A AND2
Xp2 A2 B2 p2A xor2
Xg21 A1 B1 g2B AND2
Xp21 A1 B1 p2B xor2
Xg20 A0 B0 g2C AND2
Xp20 A0 B0 p2C xor2
Xpc20 p2C CI pc2A AND2
Xco20 g2C pc2A co2A OR2
Xpc21 p2B co2A pc2B AND2
Xco21 g2B pc2B co2B OR2
Xpc2 p2A co2B pc2C AND2
Xco2 g2A pc2C co2 OR2
Xs2 p2A co2B S2 xor2

// C3
Xg3 A3 B3 g3A AND2
Xp3 A3 B3 p3A xor2
Xg32 A2 B2 g3B AND2
Xp32 A2 B2 p3B xor2
Xg31 A1 B1 g3C AND2
Xp31 A1 B1 p3C xor2
Xg30 A0 B0 g3D AND2
Xp30 A0 B0 p4D xor2
Xpc30 p4D CI pc3A AND2
Xco30 g3D pc3A co3A OR2
Xpc31 p3C co3A pc3B AND2
Xco31 g3C pc3B co3B OR2
Xpc32 p3B co3B pc3C AND2
Xco32 g3B pc3C co3C OR2
Xpc3 p3A co3C pc3D AND2
Xco3 g3A pc3D co3 OR2
Xs3 p3A co3C S3 xor2

.ends


* 4 bit Carry Look Ahead
//.subckt CLA A[3:0] B[3:0] CI S[3:0] C3
//Xcla A[3:0] B[3:0] C[2:0] CI PS[3:0] C[3:0] carry
//Xxor2 C[2:0] CI PS[3:0] S[3:0] xor2
//.ends



* Pre-processing for Brent Kung Adder
* Calculate the P and G
.subckt PG A[31:0] B[31:0] P[31:0] G[31:0]
Xg A[31:0] B[31:0] G[31:0] AND2
Xp A[31:0] B[31:0] P[31:0] xor2
.ends


* Black Cell
.subckt BLACK GA PA GB PB Go Po
Xand1 PA GB andA AND2
Xand2 PA PB Po AND2
Xor1 GA andA Go OR2
.ends

* 4 bit Carry Select
.subckt CSA A[3:0] B[3:0] CI S[3:0] Co
Xcla0 A[3:0] B[3:0] 0 SA[3:0] CA CLA
Xcla1 A[3:0] B[3:0] vdd SB[3:0] CB CLA
XmuxC CI CA CB Co mux2
XmuxS0 CI#4 SA[3:0] SB[3:0] S[3:0] mux2
.ends

.subckt adder32 op0 A[31:0] B[31:0] s[31:0] z v n
// output s
Xxor0 B[31:0] op0#32 XB[31:0] xor2
//Xcla0 A[3:0] XB[3:0] op0 s[3:0] C0 CLA
//Xcla1 A[7:4] XB[7:4] C0 s[7:4] C1 CLA
//Xcla2 A[11:8] XB[11:8] C1 s[11:8] C2 CLA
//Xcla3 A[15:12] XB[15:12] C2 s[15:12] C3 CLA
//Xcla4 A[19:16] XB[19:16] C3 s[19:16] C4 CLA
//Xcla5 A[23:20] XB[23:20] C4 s[23:20] C5 CLA
//Xcla6 A[27:24] XB[27:24] C5 s[27:24] C6 CLA
//Xcla7 A[31:28] XB[31:28] C6 s[31:28] C7 CLA
//Xcla A[31:0] XB[31:0] C[6:0] op0 s[31:0] C[7:0] CLA
//Xcla A[31:0] XB[31:0] C[30:0] op0 PS[31:0] C[31:0] carry
//Xxor1 PS[31:0] C[30:0] op0 s[31:0] xor2

// tpd = 4.954
Xcla0 A[3:0] XB[3:0] op0 s[3:0] C0 CLA
Xcsa0 A[7:4] XB[7:4] C0 s[7:4] C1 CSA
Xcsa1 A[11:8] XB[11:8] C1 s[11:8] C2 CSA
Xcsa2 A[15:12] XB[15:12] C2 s[15:12] C3 CSA
Xcsa3 A[19:16] XB[19:16] C3 s[19:16] C4 CSA
Xcsa4 A[23:20] XB[23:20] C4 s[23:20] C5 CSA
Xcsa5 A[27:24] XB[27:24] C5 s[27:24] C6 CSA
Xcsa6 A[31:28] XB[31:28] C6 s[31:28] C7 CSA



//Xadd0 A0 XB0 op0 s[0] c[0] FA
//Xadd1 A[30:1] XB[30:1] c[29:0] s[30:1] c[30:1] FA
//Xadd2 A[31] XB[31] c[30] s[31] co FA

// output z
Xz s[31:0] z Z

// output v
Xv A[31] XB[31] s[31] v V

// output n
.connect n s[31]
.ends